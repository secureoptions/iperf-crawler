
---
AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys IAM role in this secondary account so that the Iperf Crawler
  lambda function can deploy an iperf3 worker in it
Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      PrimaryAccount:
        default: Primary Account
Parameters:
  PrimaryAccount:
    Description: Specify the 12 digit AWS Account Id number of the primary account
      that is running Iperf Crawler.Do not include any spaces or dashes
    Type: String
    Default: '000000000000'
    AllowedPattern: '[0-9]{12}'
    ConstraintDescription: You must provide a 12 digit AWS Account Id with no spaces
      or dashes
Resources:
  LambdaIamPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - ec2:DescribeRegions
          - ec2:DescribeSubnets
          - ec2:CreateSecurityGroup
          - ec2:RunInstances
          - ec2:TerminateInstances
          - ec2:CreateTags
          - ec2:DeleteTags
          - ec2:DescribeInstances
          - ec2:DeleteSecurityGroup
          - ec2:DeleteTags
          - logs:DescribeLogStreams
          - logs:PutLogEvents
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - events:DisableRule
          - sdb:GetAttributes
          - sdb:PutAttributes
          - sdb:Select
          - sdb:DeleteAttributes
          - sdb:CreateDomain
          - sdb:DeleteDomain
          - states:CreateActivity
          - states:CreateStateMachine
          - states:DeleteStateMachine
          - states:DeleteActivity
          - states:DescribeExecution
          - states:StopExecution
          - iam:PassRole
          Effect: Allow
          Resource: "*"
        Version: '2012-10-17'
      PolicyName: IperfCrawlerPermissions
      Roles:
      - Ref: LambdaRole
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS:
              Fn::Join:
              - ":"
              - - 'arn:aws:iam:'
                - Ref: PrimaryAccount
                - root
          Action: sts:AssumeRole
      Path: "/"
      RoleName: IperfCrawlerLambdaRole
  
  Ec2IamPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - ec2:AuthorizeSecurityGroupIngress
          - sts:AssumeRole
          - sts:GetCallerIdentity
          Resource: "*"
      PolicyName: IperfCrawlerEc2
      Roles:
      - Ref: Ec2Role
  Ec2Role:        
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      RoleName: IperfCrawlerEc2
      
  Ec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: Ec2Role
      InstanceProfileName: IperfCrawlerEc2
  
